---empty array
[] !
=[]
---single element array
[1+2] !
=[3]
---simple array
[1,2,3] !
=[1, 2, 3]
---element chain
[2, 3, 4 -> templates
  $ + 1 ! $ + 3 !
end, 11 ] !
=[2, 3, 5, 7, 11]
---test array length literal true
[2, 3] -> templates
  when <|[](=2)> do 1 !
  otherwise 0 !
end !
=1
---test array length literal false
[2, 3, 4] -> templates
  when <|[](=2)> do 1 !
  otherwise 0 !
end !
=0
---test array length range true
[2, 3] -> templates
  when <|[](1..3)> do 1 !
  otherwise 0 !
end !
=1
---test array length range false
[2, 3, 4, 5] -> templates
  when <|[](1..3)> do 1 !
  otherwise 0 !
end !
=0
---read single value index
[2, 3, 4, 5] -> $(3) !
=4
---read single value index of defined array
a is [2, 3, 4, 5];
$a(3) !
=4
---read single value index of state array
[2, 3, 4, 5] -> templates
  @ set $;
  $@(3) !
end !
=4
---send length message
[2, 3, 4, 5] -> $::length !
=4
---set array element
[1, 2, 3] -> templates
  @ set $;
  @(1) set 5;
  $@ !
end !
=[5, 2, 3]
---set array element after output
[1, 2, 3] -> templates
  @ set $;
  $@ !
  @(1) set 5;
end !
=[1, 2, 3]
---array values are immutable
a is [1, 2, 3];
$a -> templates
  @ set $;
  @(1) set 5;
  $@ !
end -> $(1) + $a(1) !
=6
---mutable array gets refrozen after modification
[1, 2, 3] -> templates
  @ set $;
  @(1) set 5;
  a is $@;
  @(1) set 3;
  b is $@;
  @(1) set 79;
  $a(1) + $b(1) !
end !
=8
