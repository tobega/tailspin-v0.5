---condition
foo is 3;
1 -> templates
  when <|?($foo matches <|2..>)> do 2 !
end !
=2
---condition false
foo is 3;
1 -> templates
  when <|?($foo matches <|4..>)> do 4 !
  otherwise 2 !
end !
=2
---type and condition
foo is 3;
1 -> templates
  when <|..1?($foo matches <|2..>)> do 2 !
end !
=2
---type and condition false
foo is 3;
1 -> templates
  when <|..1?($foo matches <|4..>)> do 4 !
  otherwise 2 !
end !
=2
---type and multiple condition
foo is 3;
bar is 5;
1 -> templates
  when <|..1?($foo matches <|2..>)?($bar matches <|..6>)> do 2 !
end !
=2
---type and condition false
foo is 3;
bar is 5;
1 -> templates
  when <|..1?($foo matches <|4..>)?($bar matches <|..6>)> do 4 !
  when <|..1?($foo matches <|2..>)?($bar matches <|..3>)> do 3 !
  otherwise 2 !
end !
=2
---alternative conditions
1 -> templates
  when <|2..|..3> do 2 !
end !
=2
---alternative conditions false
1 -> templates
  when <|2..|..0> do 0 !
  otherwise 2 !
end !
=2
---match condition of property
{ foo: 6"s" } -> templates
  when <|{ foo: <|?($ mod 2"s" matches <|=0"s">)>}> do 1 !
end !
=1
---match length of array property
{ foo: [6] } -> templates
  when <|{ foo: <|[](1..)>}> do 1 !
end !
=1
---invert if true
3 -> if <~|..2> !
=3
---invert when false
3 -> templates
  when <~|..4> do 0 !
  otherwise $ !
end !
=3
---invert condition false
3 -> templates
  when <|?($ - 1 matches <~|..4>)> do 0 !
  otherwise $ !
end !
=3
---simple array content
[1, 2, 3] -> templates
  when <|[<|=2>]> do 1 !
  otherwise 0 !
end !
=1
