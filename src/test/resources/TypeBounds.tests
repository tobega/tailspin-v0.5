---measures not equal-comparable
5"m" -> templates
  when <|=5"s"> do 1 !
  otherwise 0 !
end !
=*TypeError
---type-bounded equal check works
5"m" -> templates
  when ´|""´<|=5"s"> do 1 !
  otherwise 0 !
end !
=0
---outside type-bound is error
5"m" -> templates
  when ´|"s"|..´<|=5"s"> do 1 !
  otherwise 0 !
end !
=*TypeError
---range lower bound checks type
5"m" -> templates
  when <|3..> do 1 !
  otherwise 0 !
end !
=*TypeError
---range lower bound type bound works
5"m" -> templates
  when ´|""|..´<|3..> do 1 !
  otherwise 0 !
end !
=0
---range lower bound type bound checked
5"m" -> templates
  when ´|"s"|..´<|3..> do 1 !
  otherwise 0 !
end !
=*TypeError
---range upper bound checks type
5"m" -> templates
  when <|..7> do 1 !
  otherwise 0 !
end !
=*TypeError
---range upper bound type bound works
5"m" -> templates
  when ´|""|..´<|..7> do 1 !
  otherwise 0 !
end !
=0
---range upper bound type bound checked
5"m" -> templates
  when ´|"s"|..´<|..7> do 1 !
  otherwise 0 !
end !
=*TypeError
---structure equals without required fields is error
{ foo: 1 } -> if <|={ foo: 1, bar: 2 }> !
=*TypeError
---structure equals without required fields within type bounds works
[{ foo: 1 } -> if ´|{foo:}´<|={ foo: 1, bar: 2 }>] !
=[]
---Measure toMatch outside explicit type bound is error
[5"m" -> if ´|..4"m"´<|=3"m">] !
=*TypeError
---Measure value outside explicit type bound is not checked
[3"m" -> if ´|..4"m"´<|=5"m">] !
=[]
---regex match of number is error
1 -> if <|'.*'> !
=*TypeError
---string type match of number is ok
[1 -> if <|''>] !
=[]
