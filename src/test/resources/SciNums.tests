---SciNum literal
1.5e0 !
=1.5e0
---negative SciNum literal
-1.5e0 !
=-1.5e0
---standard output format
1000e0 !
=1.000e3
---trailing zeros are precision
1500.00 !
=1.50000e3
---leading zeros are not precision
0.00150 !
=1.50e-3
---addition rounds to rightmost common digit
1.111 + 2.0 !
=3.1e0
---addition can gain precision on new leftmost digit
5.111 + 6.0 !
=1.11e1
---digits within addition precision remain
1.111 + 0.20 !
=1.31e0
---digits outside addition precision are lost
1.11 + 0.022 !
=1.13e0
---subtraction rounds to rightmost common digit
1.111 - 1.00 !
=1.1e-1
---digits within addition precision remain
1.111 - 0.10 !
=1.01e0
---digits outside addition precision are lost
1.11 - 0.011 !
=1.10e0
---multiplication gives smallest precision
1.11 * 2.0 !
=2.2e0
---multiplication does not reduce precision beyond smallest
1.00 * 2.0 !
=2.0e0
---big number multiply
20_000_000_000_000_000_000 * 1.11 !
=2.22e19
---long multiply
200_000 * 1.11 !
=2.22e5
---long multiply does not restrict precision
2 * 1.11 !
=2.22e0
---big number add does not restrict precision
20_000_000_000_000_000_000 + 1.11 !
=2.000000000000000000111e19
---long add does not restrict precision
20_000 + 1.11 !
=2.000111e4
---big number subtract does not restrict precision
20_000_000_000_000_000_000 - 1.11 !
=1.999999999999999999889e19
---long subtract does not restrict precision
20_000 - 1.11 !
=1.999889e4
---mathematical modulo
7.0 mod 4.0 !
=3.0e0
---mathematical modulo negative dividend
-7.0 mod 4.0 !
=1.0e0
---mathematical modulo negative divisor
7.0 mod -4.0 !
=3.0e0
---mathematical modulo negative dividend and divisor
-7.0 mod -4.0 !
=1.0e0
---truncate divide gives integer
6e0 ~/ 3e0 !
=2
---truncate divide truncates
8.0 ~/ 3.0 !
=2
---division gives smallest precision
3.3333 / 3.0 !
=1.1e0
---big number divide does not restrict precision
20_000_000_000_000_000_000 / 1.11 !
=1.80e19
---long divide does not restrict precision
200_000 / 1.11 !
=1.80e5
---exact division does not reduce precision
14.0 / 7.0 !
=2.0e0
---simple equality
3.0 -> if <|=3.0> !
=3.0e0
---SciNums autotype numeric
{ foo: 1.0 } -> { foo: 3 } !
={ foo: 3 }
---autotyped numeric accepts SciNum
{ foo: 1 } -> { foo: 3.0 } !
={ foo: 3.0e0 }
---SciNums autotype numeric checked
{ foo: 1.0 } -> { foo: [3] } !
=*TypeError
---range match
3.0 -> templates
  when <|2.5..3.5> do 1!
  otherwise 0!
end !
=1
---range match outside
3.7 -> templates
  when <|2.5..3.5> do 1!
  otherwise 0!
end !
=0
---square root operator
√3 !
=1.73205e0
---square root operator preserves precision
√3.00 !
=1.73e0
---exact square root is still SciNum
√4 !
=2.00000e0
---allow redundant + and zero
3e+00 !
=3e0
---regression test parser left recursion bug backtracking choice
1.5 + 3 + 4 !
=8.5e0
---math mod precision
7.55 mod 2.30 !
=6.50e-1
---zero has a precision for add
0.00 + 12.345 !
=1.235e1
---derived zero has a precision for add
(1.11 - 1.11) + 12.345 !
=1.235e1
---zero has a precision for multiplication
0.00 * 12.345 + 7.654321 !
=7.65e0
---derived zero has a precision for multiplication
(1.11 - 1.11) * 12.345 + 7.654321 !
=7.65e0
---range
[1.1..2.8:0.5]!
=[1.1e0, 1.6e0, 2.1e0, 2.6e0]
